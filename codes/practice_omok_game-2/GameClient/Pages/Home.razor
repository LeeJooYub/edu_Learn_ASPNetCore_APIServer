@page "/"

@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.Authorization;
@inject NavigationManager NavigationManager

<PageTitle>Home</PageTitle>

<AuthorizeView>
	<Authorized>
		<Header />
		<FluentStack VerticalAlignment="@VerticalAlignment.Center"
					 HorizontalAlignment="@HorizontalAlignment.Center"
					 Orientation="@Orientation.Vertical"
					 Style="height:100%;">
			<Roulette />
			<Match />
			@if (_currentMenu == MenuType.Profile)
			{
				<PopupProfile IsOpen=@IsOpen() OnClose=@CloseMenu Title="@_currentMenu.ToString()">
					<Profile />
				</PopupProfile>
			}
			else
			{
				<Popup IsOpen=@IsOpen() OnClose=@CloseMenu Title="@_currentMenu.ToString()">
					@switch (_currentMenu)
					{
						case MenuType.Profile:
							<Profile />
							break;
						case MenuType.Mail:
							<MailList />
							break;
						case MenuType.Inventory:
							<Inventory />
							break;
						case MenuType.Attendance:
							<AttendanceList />
							break;
						case MenuType.Shop:
							<Shop />
							break;
						default:
							<div></div>
							break;
					}
				</Popup>
			}
			<Menu ShowMenu="@ShowMenu" />
		</FluentStack>

	</Authorized>
	<NotAuthorized>
		<RedirectToLogin />
	</NotAuthorized>
</AuthorizeView>
